trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'subscription-id'
  # Web app name
  webAppName: 'web-app-name'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Environment name
  environmentName: 'environment-name'
  # Root folder under which your composer.json file is available.
  rootFolder: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  variables:
    phpVersion: '8.3'
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    #- script: |
    #    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    #    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    #    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    #    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    #    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    #    php -version
    #  workingDirectory: $(rootFolder)
    #  displayName: 'Use PHP version $(phpVersion)'

    #- script: composer install --no-interaction --prefer-dist
      #workingDirectory: $(rootFolder)
      #displayName: 'Composer install dans le repertoire : $(rootFolder)'
    
    - script: |
        #Verification si une ou plusieurs extension devrai etre personnalisees
        if [ ! -z "$(DEVEXTENSION)" ]
        then
          echo "****** Contenu du fichier composer.json AVANT les changements ******"
          cat $(rootFolder)/composer.json
          
          echo '========= Debut de explode============'

          IFS=';' read -ra extensions <<< "$(DEVEXTENSION)"
          for extensionVersion in "${extensions[@]}"; 
          do
            echo "$extensionVersion"

            IFS=':' read -r -a extension <<< "$extensionVersion"
            nom=${extension[0]}
            versionExt=${extension[1]}

            echo "NOM - $nom"
            echo "VERSION  $versionExt"
            sed -n "/devman\/$nom.*\,$/p" $(rootFolder)/composer.json
            sed -i "s/devman\/$nom.*/devman\/$nom\":\"$versionExt\",/g" $(rootFolder)/composer.json
          done
          
          echo '========= FIN de explode============'

          sed -i 's/nesbot\/carbon.*/devman\/carbon":"10.0.0"/g' $(rootFolder)/composer.json
          
          echo "****** Contenu du fichier composer.json APRES les changements ******"
          cat $(rootFolder)/composer.json
        else
          echo "Aucune extension trouves"
        fi
      displayName: Contenu du fichier composer